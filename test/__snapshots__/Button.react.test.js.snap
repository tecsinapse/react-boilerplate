// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button should render and be clickable 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    disabled={false}
    fullWidth={false}
    margin={false}
    onClick={[Function]}
    submitting={false}
    variant="success"
  >
    Facebook
  </Button>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        false,
        " ",
        "Facebook",
      ],
      "disabled": false,
      "fullWidth": false,
      "onClick": [Function],
      "style": Object {
        "backgroundColor": "#4caf50",
        "color": "white",
      },
      "type": "submit",
      "variant": "contained",
    },
    "ref": null,
    "rendered": Array [
      false,
      " ",
      "Facebook",
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          false,
          " ",
          "Facebook",
        ],
        "disabled": false,
        "fullWidth": false,
        "onClick": [Function],
        "style": Object {
          "backgroundColor": "#4caf50",
          "color": "white",
        },
        "type": "submit",
        "variant": "contained",
      },
      "ref": null,
      "rendered": Array [
        false,
        " ",
        "Facebook",
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
